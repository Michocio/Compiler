-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.0 from ParGrammar.y
-----------------------------------------------------------------------------

state 68 contains 1 reduce/reduce conflicts.
state 151 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> ClassHeader                              (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	LValue -> Ident                                    (13)
	LValue -> Ident '[' Expr ']'                       (14)
	LValue -> Ident '.' Ident                          (15)
	Block -> '{' ListStmt '}'                          (16)
	ListStmt ->                                        (17)
	ListStmt -> ListStmt Stmt                          (18)
	Stmt -> ';'                                        (19)
	Stmt -> Block                                      (20)
	Stmt -> Type ListItem ';'                          (21)
	Stmt -> LValue '=' Expr ';'                        (22)
	Stmt -> LValue '++' ';'                            (23)
	Stmt -> LValue '--' ';'                            (24)
	Stmt -> 'return' Expr ';'                          (25)
	Stmt -> 'return' ';'                               (26)
	Stmt -> 'if' '(' Expr ')' Stmt                     (27)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (28)
	Stmt -> 'while' '(' Expr ')' Stmt                  (29)
	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt    (30)
	Stmt -> Expr ';'                                   (31)
	Item -> Ident                                      (32)
	Item -> Ident '=' Expr                             (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Type -> Ident                                      (36)
	Type -> 'int'                                      (37)
	Type -> 'string'                                   (38)
	Type -> 'boolean'                                  (39)
	Type -> 'void'                                     (40)
	Type -> Type '[]'                                  (41)
	ClassHeader -> 'class' Ident ClassBlock            (42)
	ClassHeader -> 'class' Ident 'extends' Ident ClassBlock   (43)
	ClassBlock -> '{' ListClassStmt '}'                (44)
	ListClassStmt ->                                   (45)
	ListClassStmt -> ListClassStmt ClassStmt           (46)
	ClassStmt -> Type ListItem ';'                     (47)
	ClassStmt -> Type Ident '(' ListArg ')' Block ';'   (48)
	Expr6 -> LValue                                    (49)
	Expr6 -> 'new' Type '[' Expr ']'                   (50)
	Expr6 -> '(' Type ')' 'null'                       (51)
	Expr6 -> Integer                                   (52)
	Expr6 -> 'true'                                    (53)
	Expr6 -> 'false'                                   (54)
	Expr6 -> Ident '.' Ident '(' ListExpr ')'          (55)
	Expr6 -> String                                    (56)
	Expr6 -> Expr7                                     (57)
	Expr7 -> Ident '(' ListExpr ')'                    (58)
	Expr7 -> '(' Expr ')'                              (59)
	Expr5 -> '-' Expr6                                 (60)
	Expr5 -> '!' Expr6                                 (61)
	Expr5 -> Expr6                                     (62)
	Expr4 -> Expr4 MulOp Expr5                         (63)
	Expr4 -> Expr5                                     (64)
	Expr3 -> Expr3 AddOp Expr4                         (65)
	Expr3 -> Expr4                                     (66)
	Expr2 -> Expr2 RelOp Expr3                         (67)
	Expr2 -> Expr3                                     (68)
	Expr1 -> Expr2 '&&' Expr1                          (69)
	Expr1 -> Expr2                                     (70)
	Expr -> Expr1 '||' Expr                            (71)
	Expr -> Expr1                                      (72)
	ListExpr ->                                        (73)
	ListExpr -> Expr                                   (74)
	ListExpr -> Expr ',' ListExpr                      (75)
	AddOp -> '+'                                       (76)
	AddOp -> '-'                                       (77)
	MulOp -> '*'                                       (78)
	MulOp -> '/'                                       (79)
	MulOp -> '%'                                       (80)
	RelOp -> '<'                                       (81)
	RelOp -> '<='                                      (82)
	RelOp -> '>'                                       (83)
	RelOp -> '>='                                      (84)
	RelOp -> '=='                                      (85)
	RelOp -> '!='                                      (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	LValue          rules 13, 14, 15
	Block           rule  16
	ListStmt        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
	Item            rules 32, 33
	ListItem        rules 34, 35
	Type            rules 36, 37, 38, 39, 40, 41
	ClassHeader     rules 42, 43
	ClassBlock      rule  44
	ListClassStmt   rules 45, 46
	ClassStmt       rules 47, 48
	Expr6           rules 49, 50, 51, 52, 53, 54, 55, 56, 57
	Expr7           rules 58, 59
	Expr5           rules 60, 61, 62
	Expr4           rules 63, 64
	Expr3           rules 65, 66
	Expr2           rules 67, 68
	Expr1           rules 69, 70
	Expr            rules 71, 72
	ListExpr        rules 73, 74, 75
	AddOp           rules 76, 77
	MulOp           rules 78, 79, 80
	RelOp           rules 81, 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7
	ClassHeader    goto state 8

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 36)

	'['            reduce using rule 36
	'[]'           reduce using rule 36
	L_ident        reduce using rule 36


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2
	%eof           reduce using rule 7

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 17
	Type           goto state 7
	ClassHeader    goto state 8

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 16
	L_ident        shift, and enter state 2

	Ident          goto state 15

State 8

	TopDef -> ClassHeader .                             (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 9

	Type -> 'boolean' .                                 (rule 39)

	')'            reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	L_ident        reduce using rule 39


State 10

	ClassHeader -> 'class' . Ident ClassBlock           (rule 42)
	ClassHeader -> 'class' . Ident 'extends' Ident ClassBlock    (rule 43)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 11

	Type -> 'int' .                                     (rule 37)

	')'            reduce using rule 37
	'['            reduce using rule 37
	'[]'           reduce using rule 37
	L_ident        reduce using rule 37


State 12

	Type -> 'string' .                                  (rule 38)

	')'            reduce using rule 38
	'['            reduce using rule 38
	'[]'           reduce using rule 38
	L_ident        reduce using rule 38


State 13

	Type -> 'void' .                                    (rule 40)

	')'            reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	L_ident        reduce using rule 40


State 14

	ClassHeader -> 'class' Ident . ClassBlock           (rule 42)
	ClassHeader -> 'class' Ident . 'extends' Ident ClassBlock    (rule 43)

	'extends'      shift, and enter state 20
	'{'            shift, and enter state 21

	ClassBlock     goto state 19

State 15

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 18


State 16

	Type -> Type '[]' .                                 (rule 41)

	')'            reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	L_ident        reduce using rule 41


State 17

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 18

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 19

	ClassHeader -> 'class' Ident ClassBlock .           (rule 42)

	'boolean'      reduce using rule 42
	'class'        reduce using rule 42
	'int'          reduce using rule 42
	'string'       reduce using rule 42
	'void'         reduce using rule 42
	L_ident        reduce using rule 42
	%eof           reduce using rule 42


State 20

	ClassHeader -> 'class' Ident 'extends' . Ident ClassBlock    (rule 43)

	L_ident        shift, and enter state 2

	Ident          goto state 23

State 21

	ClassBlock -> '{' . ListClassStmt '}'               (rule 44)

	'boolean'      reduce using rule 45
	'int'          reduce using rule 45
	'string'       reduce using rule 45
	'void'         reduce using rule 45
	'}'            reduce using rule 45
	L_ident        reduce using rule 45

	ListClassStmt  goto state 22

State 22

	ClassBlock -> '{' ListClassStmt . '}'               (rule 44)
	ListClassStmt -> ListClassStmt . ClassStmt          (rule 46)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            shift, and enter state 33
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 31
	ClassStmt      goto state 32

State 23

	ClassHeader -> 'class' Ident 'extends' Ident . ClassBlock    (rule 43)

	'{'            shift, and enter state 21

	ClassBlock     goto state 30

State 24

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 29


State 25

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 9)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 16
	L_ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 28

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 39

	Block          goto state 38

State 29

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 37
	Type           goto state 26

State 30

	ClassHeader -> 'class' Ident 'extends' Ident ClassBlock .    (rule 43)

	'boolean'      reduce using rule 43
	'class'        reduce using rule 43
	'int'          reduce using rule 43
	'string'       reduce using rule 43
	'void'         reduce using rule 43
	L_ident        reduce using rule 43
	%eof           reduce using rule 43


State 31

	Type -> Type . '[]'                                 (rule 41)
	ClassStmt -> Type . ListItem ';'                    (rule 47)
	ClassStmt -> Type . Ident '(' ListArg ')' Block ';'    (rule 48)

	'[]'           shift, and enter state 16
	L_ident        shift, and enter state 2

	Ident          goto state 34
	Item           goto state 35
	ListItem       goto state 36

State 32

	ListClassStmt -> ListClassStmt ClassStmt .          (rule 46)

	'boolean'      reduce using rule 46
	'int'          reduce using rule 46
	'string'       reduce using rule 46
	'void'         reduce using rule 46
	'}'            reduce using rule 46
	L_ident        reduce using rule 46


State 33

	ClassBlock -> '{' ListClassStmt '}' .               (rule 44)

	'boolean'      reduce using rule 44
	'class'        reduce using rule 44
	'int'          reduce using rule 44
	'string'       reduce using rule 44
	'void'         reduce using rule 44
	L_ident        reduce using rule 44
	%eof           reduce using rule 44


State 34

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)
	ClassStmt -> Type Ident . '(' ListArg ')' Block ';'    (rule 48)

	'('            shift, and enter state 43
	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 44


State 35

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 42
	';'            reduce using rule 34


State 36

	ClassStmt -> Type ListItem . ';'                    (rule 47)

	';'            shift, and enter state 41


State 37

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 38

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 39

	Block -> '{' . ListStmt '}'                         (rule 16)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'new'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17

	ListStmt       goto state 40

State 40

	Block -> '{' ListStmt . '}'                         (rule 16)
	ListStmt -> ListStmt . Stmt                         (rule 18)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 74
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'return'       shift, and enter state 77
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	'while'        shift, and enter state 78
	'{'            shift, and enter state 39
	'}'            shift, and enter state 79
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 69
	Block          goto state 70
	Stmt           goto state 71
	Type           goto state 72
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 73

State 41

	ClassStmt -> Type ListItem ';' .                    (rule 47)

	'boolean'      reduce using rule 47
	'int'          reduce using rule 47
	'string'       reduce using rule 47
	'void'         reduce using rule 47
	'}'            reduce using rule 47
	L_ident        reduce using rule 47


State 42

	ListItem -> Item ',' . ListItem                     (rule 35)

	L_ident        shift, and enter state 2

	Ident          goto state 66
	Item           goto state 35
	ListItem       goto state 67

State 43

	ClassStmt -> Type Ident '(' . ListArg ')' Block ';'    (rule 48)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 65
	Type           goto state 26

State 44

	Item -> Ident '=' . Expr                            (rule 33)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 45

	LValue -> Ident .                                   (rule 13)
	LValue -> Ident . '[' Expr ']'                      (rule 14)
	LValue -> Ident . '.' Ident                         (rule 15)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 55)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 58)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	'('            shift, and enter state 90
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'.'            shift, and enter state 91
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'['            shift, and enter state 92
	']'            reduce using rule 13
	'||'           reduce using rule 13


State 46

	Expr6 -> Integer .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 47

	Expr6 -> String .                                   (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 48

	Expr6 -> LValue .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 49

	Expr5 -> Expr6 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 50

	Expr6 -> Expr7 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 51

	Expr4 -> Expr5 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 52

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr4 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            shift, and enter state 112
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 113
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 114
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66

	MulOp          goto state 111

State 53

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr3 .                                    (rule 68)

	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 109
	','            reduce using rule 68
	'-'            shift, and enter state 110
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	AddOp          goto state 108

State 54

	Expr2 -> Expr2 . RelOp Expr3                        (rule 67)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 69)
	Expr1 -> Expr2 .                                    (rule 70)

	'!='           shift, and enter state 101
	'&&'           shift, and enter state 102
	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'<'            shift, and enter state 103
	'<='           shift, and enter state 104
	'=='           shift, and enter state 105
	'>'            shift, and enter state 106
	'>='           shift, and enter state 107
	']'            reduce using rule 70
	'||'           reduce using rule 70

	RelOp          goto state 100

State 55

	Expr -> Expr1 . '||' Expr                           (rule 71)
	Expr -> Expr1 .                                     (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	']'            reduce using rule 72
	'||'           shift, and enter state 99


State 56

	Item -> Ident '=' Expr .                            (rule 33)

	','            reduce using rule 33
	';'            reduce using rule 33


State 57

	Expr5 -> '!' . Expr6                                (rule 61)

	'('            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 98
	Expr7          goto state 50

State 58

	Expr6 -> '(' . Type ')' 'null'                      (rule 51)
	Expr7 -> '(' . Expr ')'                             (rule 59)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Type           goto state 96
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 97

State 59

	Expr5 -> '-' . Expr6                                (rule 60)

	'('            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 95
	Expr7          goto state 50

State 60

	Expr6 -> 'false' .                                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 61

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 50)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 94

State 62

	Expr6 -> 'true' .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 63

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 64

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 65

	ClassStmt -> Type Ident '(' ListArg . ')' Block ';'    (rule 48)

	')'            shift, and enter state 93


State 66

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 44


State 67

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 68

	LValue -> Ident .                                   (rule 13)
	LValue -> Ident . '[' Expr ']'                      (rule 14)
	LValue -> Ident . '.' Ident                         (rule 15)
	Type -> Ident .                                     (rule 36)
	Expr6 -> Ident . '.' Ident '(' ListExpr ')'         (rule 55)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 58)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	'('            shift, and enter state 90
	')'            reduce using rule 36
			(reduce using rule 13)

	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'++'           reduce using rule 13
	'-'            reduce using rule 13
	'--'           reduce using rule 13
	'.'            shift, and enter state 91
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'['            shift, and enter state 92
	'[]'           reduce using rule 36
	'||'           reduce using rule 13
	L_ident        reduce using rule 36


State 69

	Stmt -> LValue . '=' Expr ';'                       (rule 22)
	Stmt -> LValue . '++' ';'                           (rule 23)
	Stmt -> LValue . '--' ';'                           (rule 24)
	Expr6 -> LValue .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           shift, and enter state 87
	'-'            reduce using rule 49
	'--'           shift, and enter state 88
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            shift, and enter state 89
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 70

	Stmt -> Block .                                     (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 71

	ListStmt -> ListStmt Stmt .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 72

	Stmt -> Type . ListItem ';'                         (rule 21)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 16
	L_ident        shift, and enter state 2

	Ident          goto state 66
	Item           goto state 35
	ListItem       goto state 86

State 73

	Stmt -> Expr . ';'                                  (rule 31)

	';'            shift, and enter state 85


State 74

	Stmt -> ';' .                                       (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 75

	Stmt -> 'for' . '(' Type Ident ':' Ident ')' Stmt    (rule 30)

	'('            shift, and enter state 84


State 76

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 28)

	'('            shift, and enter state 83


State 77

	Stmt -> 'return' . Expr ';'                         (rule 25)
	Stmt -> 'return' . ';'                              (rule 26)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 82
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 81

State 78

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 29)

	'('            shift, and enter state 80


State 79

	Block -> '{' ListStmt '}' .                         (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'class'        reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'new'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 80

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 29)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 135

State 81

	Stmt -> 'return' Expr . ';'                         (rule 25)

	';'            shift, and enter state 134


State 82

	Stmt -> 'return' ';' .                              (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 83

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 133

State 84

	Stmt -> 'for' '(' . Type Ident ':' Ident ')' Stmt    (rule 30)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 132

State 85

	Stmt -> Expr ';' .                                  (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 86

	Stmt -> Type ListItem . ';'                         (rule 21)

	';'            shift, and enter state 131


State 87

	Stmt -> LValue '++' . ';'                           (rule 23)

	';'            shift, and enter state 130


State 88

	Stmt -> LValue '--' . ';'                           (rule 24)

	';'            shift, and enter state 129


State 89

	Stmt -> LValue '=' . Expr ';'                       (rule 22)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 128

State 90

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 58)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 73
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 126
	ListExpr       goto state 127

State 91

	LValue -> Ident '.' . Ident                         (rule 15)
	Expr6 -> Ident '.' . Ident '(' ListExpr ')'         (rule 55)

	L_ident        shift, and enter state 2

	Ident          goto state 125

State 92

	LValue -> Ident '[' . Expr ']'                      (rule 14)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 124

State 93

	ClassStmt -> Type Ident '(' ListArg ')' . Block ';'    (rule 48)

	'{'            shift, and enter state 39

	Block          goto state 123

State 94

	Type -> Type . '[]'                                 (rule 41)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 50)

	'['            shift, and enter state 122
	'[]'           shift, and enter state 16


State 95

	Expr5 -> '-' Expr6 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 96

	Type -> Type . '[]'                                 (rule 41)
	Expr6 -> '(' Type . ')' 'null'                      (rule 51)

	')'            shift, and enter state 121
	'[]'           shift, and enter state 16


State 97

	Expr7 -> '(' Expr . ')'                             (rule 59)

	')'            shift, and enter state 120


State 98

	Expr5 -> '!' Expr6 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 99

	Expr -> Expr1 '||' . Expr                           (rule 71)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 119

State 100

	Expr2 -> Expr2 RelOp . Expr3                        (rule 67)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 118

State 101

	RelOp -> '!=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 102

	Expr1 -> Expr2 '&&' . Expr1                         (rule 69)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 117

State 103

	RelOp -> '<' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 104

	RelOp -> '<=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 105

	RelOp -> '==' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 106

	RelOp -> '>' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 107

	RelOp -> '>=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 108

	Expr3 -> Expr3 AddOp . Expr4                        (rule 65)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 116

State 109

	AddOp -> '+' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 110

	AddOp -> '-' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 111

	Expr4 -> Expr4 MulOp . Expr5                        (rule 63)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 115

State 112

	MulOp -> '%' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 113

	MulOp -> '*' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 114

	MulOp -> '/' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 115

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 116

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 112
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 113
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 114
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 111

State 117

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 118

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 109
	','            reduce using rule 67
	'-'            shift, and enter state 110
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 108

State 119

	Expr -> Expr1 '||' Expr .                           (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	']'            reduce using rule 71


State 120

	Expr7 -> '(' Expr ')' .                             (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 121

	Expr6 -> '(' Type ')' . 'null'                      (rule 51)

	'null'         shift, and enter state 146


State 122

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 50)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 145

State 123

	ClassStmt -> Type Ident '(' ListArg ')' Block . ';'    (rule 48)

	';'            shift, and enter state 144


State 124

	LValue -> Ident '[' Expr . ']'                      (rule 14)

	']'            shift, and enter state 143


State 125

	LValue -> Ident '.' Ident .                         (rule 15)
	Expr6 -> Ident '.' Ident . '(' ListExpr ')'         (rule 55)

	'!='           reduce using rule 15
	'%'            reduce using rule 15
	'&&'           reduce using rule 15
	'('            shift, and enter state 142
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	'++'           reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'--'           reduce using rule 15
	'/'            reduce using rule 15
	';'            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	']'            reduce using rule 15
	'||'           reduce using rule 15


State 126

	ListExpr -> Expr .                                  (rule 74)
	ListExpr -> Expr . ',' ListExpr                     (rule 75)

	')'            reduce using rule 74
	','            shift, and enter state 141


State 127

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 58)

	')'            shift, and enter state 140


State 128

	Stmt -> LValue '=' Expr . ';'                       (rule 22)

	';'            shift, and enter state 139


State 129

	Stmt -> LValue '--' ';' .                           (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 130

	Stmt -> LValue '++' ';' .                           (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 131

	Stmt -> Type ListItem ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 132

	Stmt -> 'for' '(' Type . Ident ':' Ident ')' Stmt    (rule 30)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 16
	L_ident        shift, and enter state 2

	Ident          goto state 138

State 133

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 28)

	')'            shift, and enter state 137


State 134

	Stmt -> 'return' Expr ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 135

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 29)

	')'            shift, and enter state 136


State 136

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 29)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 74
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'return'       shift, and enter state 77
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	'while'        shift, and enter state 78
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 69
	Block          goto state 70
	Stmt           goto state 152
	Type           goto state 72
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 73

State 137

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 74
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'return'       shift, and enter state 77
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	'while'        shift, and enter state 78
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 69
	Block          goto state 70
	Stmt           goto state 151
	Type           goto state 72
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 73

State 138

	Stmt -> 'for' '(' Type Ident . ':' Ident ')' Stmt    (rule 30)

	':'            shift, and enter state 150


State 139

	Stmt -> LValue '=' Expr ';' .                       (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 140

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 141

	ListExpr -> Expr ',' . ListExpr                     (rule 75)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 73
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 126
	ListExpr       goto state 149

State 142

	Expr6 -> Ident '.' Ident '(' . ListExpr ')'         (rule 55)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 73
	'-'            shift, and enter state 59
	'false'        shift, and enter state 60
	'new'          shift, and enter state 61
	'true'         shift, and enter state 62
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 48
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 126
	ListExpr       goto state 148

State 143

	LValue -> Ident '[' Expr ']' .                      (rule 14)

	'!='           reduce using rule 14
	'%'            reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'++'           reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'--'           reduce using rule 14
	'/'            reduce using rule 14
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	']'            reduce using rule 14
	'||'           reduce using rule 14


State 144

	ClassStmt -> Type Ident '(' ListArg ')' Block ';' .    (rule 48)

	'boolean'      reduce using rule 48
	'int'          reduce using rule 48
	'string'       reduce using rule 48
	'void'         reduce using rule 48
	'}'            reduce using rule 48
	L_ident        reduce using rule 48


State 145

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 50)

	']'            shift, and enter state 147


State 146

	Expr6 -> '(' Type ')' 'null' .                      (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 147

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 148

	Expr6 -> Ident '.' Ident '(' ListExpr . ')'         (rule 55)

	')'            shift, and enter state 155


State 149

	ListExpr -> Expr ',' ListExpr .                     (rule 75)

	')'            reduce using rule 75


State 150

	Stmt -> 'for' '(' Type Ident ':' . Ident ')' Stmt    (rule 30)

	L_ident        shift, and enter state 2

	Ident          goto state 154

State 151

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 27)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         shift, and enter state 153
			(reduce using rule 27)

	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 152

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 153

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 28)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 74
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'return'       shift, and enter state 77
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	'while'        shift, and enter state 78
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 69
	Block          goto state 70
	Stmt           goto state 157
	Type           goto state 72
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 73

State 154

	Stmt -> 'for' '(' Type Ident ':' Ident . ')' Stmt    (rule 30)

	')'            shift, and enter state 156


State 155

	Expr6 -> Ident '.' Ident '(' ListExpr ')' .         (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 156

	Stmt -> 'for' '(' Type Ident ':' Ident ')' . Stmt    (rule 30)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 74
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 75
	'if'           shift, and enter state 76
	'int'          shift, and enter state 11
	'new'          shift, and enter state 61
	'return'       shift, and enter state 77
	'string'       shift, and enter state 12
	'true'         shift, and enter state 62
	'void'         shift, and enter state 13
	'while'        shift, and enter state 78
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 63
	L_quoted       shift, and enter state 64

	Ident          goto state 68
	Integer        goto state 46
	String         goto state 47
	LValue         goto state 69
	Block          goto state 70
	Stmt           goto state 158
	Type           goto state 72
	Expr6          goto state 49
	Expr7          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 73

State 157

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 158

	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt .    (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 46
Number of non-terminals: 32
Number of states: 159
